<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright [2010], Red Hat, Inc., 
	and individual contributors by the @authors tag. See the copyright.txt in 
	the distribution for a full listing of individual contributors. Licensed 
	under the Apache License, Version 2.0 (the "License"); you may not use this 
	file except in compliance with the License. You may obtain a copy of the 
	License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by 
	applicable law or agreed to in writing, software distributed under the License 
	is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
	KIND, either express or implied. See the License for the specific language 
	governing permissions and limitations under the License. -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="jcr-eventmapping">
	<title>Seam JCR - Event Mapping</title>
	
	<section id="jcr-event-mapping-intro">
	   <title>Introduction to Event Mapping</title>
	   
		<para> 
		  Seam JCR provides functionality to fire CDI Events based on events found in JCR. The
		  rules of how events are fired are based around the underlying implementation. 
		</para>
		
		<tip>
		  You will not have an active JCR Session during the event firing, a new one will need
		  to be created. 
	   </tip>
	   
		<tip>
		  Some JCR implementations, like Modeshape fires events on a separate thread, so
		  probably you will get errors if your observer method is declared on a @RequestScoped
		  object, for example. 
		</tip>
	</section>
	
	<section id="jcr-event-mapping-activation">
	   <title>Observing JMS events</title>
	
		<para> 
		  To observe an event, use the <code>@Observes</code> and the additional qualifiers from the 
		  <literal>seam-jcr-api</literal> module (Check package <code>org.jboss.seam.jcr.annotations.events</code>). 
		  If you need to watch any JCR event, then avoid using any qualifier at all. 
		</para>
		
		<programlisting role="java"><![CDATA[import javax.jcr.observation.Event;
       
    public void observeAdded(@Observes @NodeAdded Event evt) {
    	// Called when a node is added
    }
    
    public void observeAll(@Observes javax.jcr.observation.Event evt) {
    	// Called when any node event occurs 
    }]]></programlisting>
    
	</section>
	<!-- vim:et:ts=3:sw=3:tw=120 -->
</chapter>
